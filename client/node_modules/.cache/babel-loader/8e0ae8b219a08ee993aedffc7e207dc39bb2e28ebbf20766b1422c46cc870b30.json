{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\mern\\\\findmydoctor\\\\src\\\\components\\\\DoctorRegistration.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './DoctorRegistration.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorRegistration = () => {\n  _s();\n  const [doctorData, setDoctorData] = useState([{\n    name: '',\n    specialization: '',\n    email: ''\n  }]);\n  const hospitalId = localStorage.getItem('hospitalId'); // Retrieve hospital ID from storage\n  const navigate = useNavigate();\n  const addDoctorFields = () => {\n    setDoctorData([...doctorData, {\n      name: '',\n      specialization: '',\n      email: ''\n    }]);\n  };\n  const handleInputChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedDoctorData = [...doctorData];\n    updatedDoctorData[index][name] = value;\n    setDoctorData(updatedDoctorData);\n  };\n  const generateDoctorId = index => {\n    const doctorNumber = (index + 1).toString().padStart(3, '0'); // Generate a 3-digit doctor number\n    const year = new Date().getFullYear().toString().slice(-2); // Last 2 digits of the year\n    return `D${year}${doctorNumber}`; // Example: D24001, D24002, etc.\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const doctorsWithIds = doctorData.map((doctor, index) => ({\n      ...doctor,\n      Doctor_ID: generateDoctorId(index) // Add the generated Doctor_ID\n    }));\n    try {\n      await axios.post('http://localhost:5000/register-doctors', {\n        hospitalId,\n        // Include the hospital ID\n        doctors: doctorsWithIds\n      });\n      alert('Doctors registered successfully');\n      navigate('/consultation'); // Redirect to consultation page\n    } catch (error) {\n      alert('Error registering doctors');\n      console.error('There was an error registering the doctors!', error);\n    }\n  };\n  const renderDoctorFields = () => {\n    return doctorData.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Doctor \", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `doctorName${index}`,\n          children: \"Doctor's Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: `doctorName${index}`,\n          name: \"name\",\n          className: \"doctor-input\",\n          placeholder: \"Doctor Name\",\n          value: doctor.name,\n          onChange: e => handleInputChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `specialization${index}`,\n          children: \"Specialization:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `specialization${index}`,\n          name: \"specialization\",\n          className: \"doctor-input\",\n          value: doctor.specialization,\n          onChange: e => handleInputChange(index, e),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cardiology\",\n            children: \"Cardiology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"neurology\",\n            children: \"Neurology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"orthopedics\",\n            children: \"Orthopedics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"pediatrics\",\n            children: \"Pediatrics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"general\",\n            children: \"General\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"dermatology\",\n            children: \"Dermatology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"gynecology\",\n            children: \"Gynecology\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"psychiatry\",\n            children: \"Psychiatry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `email${index}`,\n          children: \"Doctor's Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: `email${index}`,\n          name: \"email\",\n          className: \"doctor-input\",\n          placeholder: \"Doctor Email\",\n          value: doctor.email,\n          onChange: e => handleInputChange(index, e),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"doctorContainer\",\n        children: renderDoctorFields()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: addDoctorFields,\n        className: \"add-button\",\n        children: \"Add Another Doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorRegistration, \"l4AkDoLiobZQA0cqZis3J8ua+0U=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorRegistration;\nexport default DoctorRegistration;\nvar _c;\n$RefreshReg$(_c, \"DoctorRegistration\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","DoctorRegistration","_s","doctorData","setDoctorData","name","specialization","email","hospitalId","localStorage","getItem","navigate","addDoctorFields","handleInputChange","index","e","value","target","updatedDoctorData","generateDoctorId","doctorNumber","toString","padStart","year","Date","getFullYear","slice","handleSubmit","preventDefault","doctorsWithIds","map","doctor","Doctor_ID","post","doctors","alert","error","console","renderDoctorFields","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","placeholder","onChange","required","onSubmit","onClick","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/mern/findmydoctor/src/components/DoctorRegistration.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './DoctorRegistration.css';\r\n\r\nconst DoctorRegistration = () => {\r\n  const [doctorData, setDoctorData] = useState([{ name: '', specialization: '', email: '' }]);\r\n  const hospitalId = localStorage.getItem('hospitalId'); // Retrieve hospital ID from storage\r\n  const navigate = useNavigate();\r\n\r\n  const addDoctorFields = () => {\r\n    setDoctorData([...doctorData, { name: '', specialization: '', email: '' }]);\r\n  };\r\n\r\n  const handleInputChange = (index, e) => {\r\n    const { name, value } = e.target;\r\n    const updatedDoctorData = [...doctorData];\r\n    updatedDoctorData[index][name] = value;\r\n    setDoctorData(updatedDoctorData);\r\n  };\r\n\r\n  const generateDoctorId = (index) => {\r\n    const doctorNumber = (index + 1).toString().padStart(3, '0'); // Generate a 3-digit doctor number\r\n    const year = new Date().getFullYear().toString().slice(-2); // Last 2 digits of the year\r\n    return `D${year}${doctorNumber}`; // Example: D24001, D24002, etc.\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const doctorsWithIds = doctorData.map((doctor, index) => ({\r\n      ...doctor,\r\n      Doctor_ID: generateDoctorId(index), // Add the generated Doctor_ID\r\n    }));\r\n\r\n    try {\r\n      await axios.post('http://localhost:5000/register-doctors', {\r\n        hospitalId, // Include the hospital ID\r\n        doctors: doctorsWithIds,\r\n      });\r\n\r\n      alert('Doctors registered successfully');\r\n      navigate('/consultation'); // Redirect to consultation page\r\n    } catch (error) {\r\n      alert('Error registering doctors');\r\n      console.error('There was an error registering the doctors!', error);\r\n    }\r\n  };\r\n\r\n  const renderDoctorFields = () => {\r\n    return doctorData.map((doctor, index) => (\r\n      <fieldset key={index}>\r\n        <legend>Doctor {index + 1}</legend>\r\n        <div className=\"input-group\">\r\n          <label htmlFor={`doctorName${index}`}>Doctor's Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id={`doctorName${index}`}\r\n            name=\"name\"\r\n            className=\"doctor-input\"\r\n            placeholder=\"Doctor Name\"\r\n            value={doctor.name}\r\n            onChange={(e) => handleInputChange(index, e)}\r\n            required\r\n          />\r\n          <label htmlFor={`specialization${index}`}>Specialization:</label>\r\n          <select\r\n            id={`specialization${index}`}\r\n            name=\"specialization\"\r\n            className=\"doctor-input\"\r\n            value={doctor.specialization}\r\n            onChange={(e) => handleInputChange(index, e)}\r\n            required\r\n          >\r\n            <option value=\"\">Select</option>\r\n            <option value=\"cardiology\">Cardiology</option>\r\n            <option value=\"neurology\">Neurology</option>\r\n            <option value=\"orthopedics\">Orthopedics</option>\r\n            <option value=\"pediatrics\">Pediatrics</option>\r\n            <option value=\"general\">General</option>\r\n            <option value=\"dermatology\">Dermatology</option>\r\n            <option value=\"gynecology\">Gynecology</option>\r\n            <option value=\"psychiatry\">Psychiatry</option>\r\n          </select>\r\n          <label htmlFor={`email${index}`}>Doctor's Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id={`email${index}`}\r\n            name=\"email\"\r\n            className=\"doctor-input\"\r\n            placeholder=\"Doctor Email\"\r\n            value={doctor.email}\r\n            onChange={(e) => handleInputChange(index, e)}\r\n            required\r\n          />\r\n        </div>\r\n      </fieldset>\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Doctor Registration</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div id=\"doctorContainer\">\r\n          {renderDoctorFields()}\r\n        </div>\r\n        <button type=\"button\" onClick={addDoctorFields} className=\"add-button\">\r\n          Add Another Doctor\r\n        </button>\r\n        <button type=\"submit\" className=\"submit-button\">\r\n          Save\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorRegistration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}