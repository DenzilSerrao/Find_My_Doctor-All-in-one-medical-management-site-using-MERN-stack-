{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\win10\\\\Desktop\\\\mern\\\\client\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './register.css'; // Ensure this file exists for styling\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    type: 'User',\n    // Default selection\n    Email: '',\n    // Changed to Email\n    Password: ''\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      type,\n      Email,\n      Password\n    } = formData; // Extract form data\n\n    try {\n      const response = await axios.post('http://localhost:5000/login', {\n        type,\n        Email,\n        Password\n      });\n      if (response.status === 200) {\n        const {\n          type,\n          email,\n          name,\n          doctorName,\n          hospitalName,\n          hospitalId\n        } = response.data;\n        sessionStorage.setItem('userType', type);\n        sessionStorage.setItem('userEmail', email);\n\n        // Store the correct display name based on user type\n        if (type === 'Hospital') {\n          sessionStorage.setItem('displayName', hospitalName || email);\n          sessionStorage.setItem('hospitalId', hospitalId || 'undefined');\n        } else if (type === 'Doctor') {\n          sessionStorage.setItem('displayName', doctorName || email);\n        } else {\n          sessionStorage.setItem('displayName', name || email);\n        }\n        alert('Login successful!');\n\n        // Redirect based on user type\n        if (type === 'Hospital') {\n          navigate('/profile'); // Adjust route if needed\n        } else if (type === 'Doctor') {\n          navigate('/'); // Adjust to appropriate route for Doctor\n        } else {\n          navigate('/'); // Adjust to appropriate route for User\n        }\n      } else {\n        alert('Login failed. Please check your credentials.');\n      }\n    } catch (error) {\n      console.error('There was an error logging in!', error);\n      alert('Login failed due to a server error.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        value: formData.type,\n        onChange: handleChange,\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"User\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hospital\",\n          children: \"Hospital\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Doctor\",\n          children: \"Doctor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        className: \"input\",\n        name: \"Email\" // Changed to Email\n        ,\n        placeholder: \"E-mail\",\n        value: formData.Email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"input\",\n        name: \"Password\",\n        placeholder: \"Password\",\n        value: formData.Password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"login-button\",\n        type: \"submit\",\n        value: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"agreement\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: \"Learn about the user license agreement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"+VSFSu4X99iJg+3n4Uie8+U50SI=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Header","jsxDEV","_jsxDEV","Login","_s","formData","setFormData","type","Email","Password","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","post","status","email","doctorName","hospitalName","hospitalId","data","sessionStorage","setItem","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","href","_c","$RefreshReg$"],"sources":["C:/Users/win10/Desktop/mern/client/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './register.css'; // Ensure this file exists for styling\r\nimport Header from './Header';\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    type: 'User', // Default selection\r\n    Email: '',    // Changed to Email\r\n    Password: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    const { type, Email, Password } = formData; // Extract form data\r\n  \r\n    try {\r\n      const response = await axios.post('http://localhost:5000/login', { type, Email, Password });\r\n  \r\n      if (response.status === 200) {\r\n        const { type, email, name, doctorName, hospitalName, hospitalId } = response.data;\r\n\r\n        sessionStorage.setItem('userType', type);\r\n        sessionStorage.setItem('userEmail', email);\r\n\r\n        // Store the correct display name based on user type\r\n        if (type === 'Hospital') {\r\n          sessionStorage.setItem('displayName', hospitalName || email);\r\n          sessionStorage.setItem('hospitalId', hospitalId || 'undefined');\r\n        } else if (type === 'Doctor') {\r\n          sessionStorage.setItem('displayName', doctorName || email);\r\n        } else {\r\n          sessionStorage.setItem('displayName', name || email);\r\n        }\r\n        alert('Login successful!');\r\n  \r\n        // Redirect based on user type\r\n        if (type === 'Hospital') {\r\n          navigate('/profile'); // Adjust route if needed\r\n        } else if (type === 'Doctor') {\r\n          navigate('/'); // Adjust to appropriate route for Doctor\r\n        } else {\r\n          navigate('/'); // Adjust to appropriate route for User\r\n        }\r\n      } else {\r\n        alert('Login failed. Please check your credentials.');\r\n      }\r\n    } catch (error) {\r\n      console.error('There was an error logging in!', error);\r\n      alert('Login failed due to a server error.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <div className=\"heading\">Sign In</div>\r\n      <form onSubmit={handleSubmit} className=\"form\">\r\n        <select \r\n          name=\"type\" \r\n          value={formData.type} \r\n          onChange={handleChange} \r\n          className=\"input\"\r\n        >\r\n          <option value=\"User\">User</option>\r\n          <option value=\"Hospital\">Hospital</option>\r\n          <option value=\"Doctor\">Doctor</option>\r\n        </select>\r\n        <input \r\n          type=\"email\" \r\n          className=\"input\" \r\n          name=\"Email\" // Changed to Email\r\n          placeholder=\"E-mail\" \r\n          value={formData.Email}\r\n          onChange={handleChange}\r\n          required \r\n        />\r\n        <input \r\n          type=\"password\" \r\n          className=\"input\" \r\n          name=\"Password\"  \r\n          placeholder=\"Password\" \r\n          value={formData.Password}\r\n          onChange={handleChange}\r\n          required \r\n        />\r\n        <input \r\n          className=\"login-button\" \r\n          type=\"submit\" \r\n          value=\"Sign In\" \r\n        />\r\n      </form>\r\n      <span className=\"agreement\">\r\n        <a href=\"#\">Learn about the user license agreement</a>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}